---
- name: check for supported OS
  assert:
    that:
      - "ansible_os_family in supported_ansible_os_families"

- debug: var=minecraft_server

- name: check for supported server implementation
  assert:
    that:
      - "minecraft_server in supported_minecraft_servers"

- ansible.builtin.include_tasks: "{{ minecraft_hook_before_setup | default('empty.yml') }}"

- ansible.builtin.include_tasks: fetchversion/main.yml

- ansible.builtin.include_tasks: setup/main.yml

- ansible.builtin.include_tasks: plugins/main.yml
  when: "minecraft_plugin_sets is defined and (0 < minecraft_plugin_sets | length )"

- ansible.builtin.include_tasks: "{{ minecraft_hook_after_setup | default('empty.yml') }}"

- ansible.builtin.include_tasks: "{{ minecraft_hook_before_download | default('empty.yml') }}"

- ansible.builtin.include_tasks: downloadhelper/main.yml

- ansible.builtin.include_tasks: download/main.yml

- ansible.builtin.include_tasks: "{{ minecraft_hook_after_download | default('empty.yml') }}"

- ansible.builtin.include_tasks: "{{ minecraft_hook_before_install | default('empty.yml') }}"

- name: Finalize the Server deploy, removing the unfinished file and switching the symlink
  deploy_helper:
    path: "{{ minecraft_home }}"
    release: '{{ deploy_helper.new_release }}'
    state: finalize
  changed_when: False

- ansible.builtin.include_tasks: install/main.yml

- ansible.builtin.include_tasks: "{{ minecraft_hook_after_install | default('empty.yml') }}"

- ansible.builtin.include_tasks: acl.yml

- ansible.builtin.include_tasks: configure.yml

- ansible.builtin.include_tasks: process_controll/main.yml

- ansible.builtin.include_tasks: "{{ minecraft_hook_before_start | default('empty.yml') }}"

- meta: flush_handlers

- ansible.builtin.include_tasks: "{{ minecraft_hook_after_start | default('empty.yml') }}"
